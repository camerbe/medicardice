<?php

namespace App\Repositories;

use App\Http\Resources\PatientResource;
use App\Models\Patient;
use App\Models\Role;
use App\Models\Slot;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Support\Str;
use Symfony\Component\HttpFoundation\Response;

class SlotRepository extends BaseRepository
{

    public function __construct(Slot $slot)
    {
        $this->model=$slot;

    }

    public function findById($id)
    {
        return parent::findById($id);
        //return PatientResource::collection($patient);
    }

    public function delete($id)
    {
        //$slot=parent::findById($id);
        //User::find($patient->user_id)->delete();
        return parent::delete($id);
    }

    public function update(array $input, $id)
    {
        $currentSlot=parent::findById($id);
        $input['start']= Carbon::parse($input['start'])->format('Y-m-d H:i') ?? $currentSlot->start;
        $input['end']= Carbon::parse($input['end'])->format('Y-m-d H:i') ?? $currentSlot->end;
        $input['status']=isset($input['status'])? $input["status"]:$currentSlot->status;
        $input['updated_by']=isset($input['updated_by'])? $input["updated_by"]:$currentSlot->updated_by;
        return parent::update($input, $id); // TODO: Change the autogenerated stub
    }

    public function create(array $input)
    {

        $input['start']=Carbon::parse($input['start'])->format('Y-m-d H:i');
        $input['end']=Carbon::parse($input['end'])->format('Y-m-d H:i');
        unset($input['date_slot']);
        return parent::create($input);
    }
    public function findAll(){
        return Slot::where('start','>=',now())->get();
    }

}
